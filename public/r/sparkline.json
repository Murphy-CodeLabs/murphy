{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "sparkline",
  "type": "registry:block",
  "title": "The Sparkline component is a line chart that displays the price of a token over time.",
  "dependencies": [
    "recharts"
  ],
  "registryDependencies": [
    "chart"
  ],
  "files": [
    {
      "path": "components/ui/murphy/price-change.tsx",
      "content": "\"use client\";\r\n\r\nimport React from \"react\";\r\n\r\nimport { cn, formatUsd } from \"@/lib/utils\";\r\n\r\ntype PriceChangeProps = {\r\n  data: {\r\n    timestamp: number;\r\n    price: number;\r\n  }[];\r\n  type?: \"%\" | \"$\";\r\n};\r\n\r\nconst PriceChange = ({ data, type = \"%\" }: PriceChangeProps) => {\r\n  const [selectedType, setSelectedType] = React.useState(type);\r\n  const startPrice = data[0]?.price || 0;\r\n  const endPrice = data[data.length - 1]?.price || 0;\r\n  const priceDifference = endPrice - startPrice;\r\n  const percentageChange = (priceDifference / startPrice) * 100;\r\n  const isPositive = priceDifference > 0;\r\n\r\n  if (!data[0]?.price) return null;\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"cursor-pointer text-xs\",\r\n        isPositive ? \"text-[#75ba80]\" : \"text-[#e07d6f]\",\r\n      )}\r\n      onClick={() => setSelectedType(selectedType === \"%\" ? \"$\" : \"%\")}\r\n    >\r\n      {isPositive && \"+\"}\r\n      {selectedType === \"%\"\r\n        ? `${percentageChange.toFixed(2)}%`\r\n        : `${formatUsd(priceDifference)}`}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { PriceChange };",
      "type": "registry:file",
      "target": "components/ui/murphy/price-change.tsx"
    },
    {
      "path": "components/ui/murphy/sparkline.tsx",
      "content": "\"use client\";\r\nimport React from \"react\";\r\n\r\nimport { LineChart, CartesianGrid, XAxis, YAxis, Line } from \"recharts\";\r\n\r\nimport { ChartConfig, ChartContainer } from \"@/components/ui/chart\";\r\n\r\nimport { PriceChange } from \"@/components/ui/murphy/price-change\";\r\n\r\ntype SparklineProps = {\r\n  data: {\r\n    timestamp: number;\r\n    price: number;\r\n  }[];\r\n};\r\n\r\nconst chartConfig = {\r\n  desktop: {\r\n    label: \"Price\",\r\n    color: \"hsl(var(--chart-1))\",\r\n  },\r\n} satisfies ChartConfig;\r\n\r\nconst Sparkline = ({ data }: SparklineProps) => {\r\n  if (!data.length) return null;\r\n\r\n  const minPrice = Math.min(...data.map((d) => d.price));\r\n  const maxPrice = Math.max(...data.map((d) => d.price));\r\n\r\n  return (\r\n    <div className=\"relative w-full\">\r\n      <ChartContainer\r\n        config={chartConfig}\r\n        className=\"h-[80px] w-full shrink-0 pr-16\"\r\n      >\r\n        <LineChart accessibilityLayer data={data}>\r\n          <CartesianGrid horizontal={false} vertical={false} />\r\n          <XAxis\r\n            dataKey=\"time\"\r\n            tickLine={false}\r\n            axisLine={false}\r\n            minTickGap={32}\r\n            tickMargin={8}\r\n            className=\"text-xs\"\r\n          />\r\n          <YAxis domain={[minPrice, maxPrice]} hide={true} />\r\n          <defs>\r\n            <linearGradient id=\"fill\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n              <stop\r\n                offset=\"5%\"\r\n                stopColor={\r\n                  data[data.length - 1].price >= data[0].price\r\n                    ? \"#75ba80\"\r\n                    : \"#e07d6f\"\r\n                }\r\n                stopOpacity={0.8}\r\n              />\r\n              <stop\r\n                offset=\"95%\"\r\n                stopColor={\r\n                  data[data.length - 1].price >= data[0].price\r\n                    ? \"#75ba80\"\r\n                    : \"#e07d6f\"\r\n                }\r\n                stopOpacity={0.1}\r\n              />\r\n            </linearGradient>\r\n          </defs>\r\n          <Line\r\n            dataKey=\"price\"\r\n            type=\"natural\"\r\n            dot={false}\r\n            stroke={\r\n              data[data.length - 1].price >= data[0].price\r\n                ? \"#75ba80\"\r\n                : \"#e07d6f\"\r\n            }\r\n          />\r\n        </LineChart>\r\n      </ChartContainer>\r\n      <div className=\"absolute right-0 top-0 z-10\">\r\n        <PriceChange data={data} type=\"$\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Sparkline };\r\n",
      "type": "registry:file",
      "target": "components/ui/murphy/sparkline.tsx"
    }
  ]
}