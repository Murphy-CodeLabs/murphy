{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "RecurringOrderCard",
  "type": "registry:block",
  "author": "Murphy",
  "description": "Murphy component to display a single Jupiter Recurring DCA Order on Solana mainnet",
  "dependencies": [
    "@solana/web3.js",
    "@solana/wallet-adapter-react",
    "sonner"
  ],
  "files": [
    {
      "path": "components/ui/murphy/Jupiter-Recurring/RecurringOrderCard.tsx",
      "content": "\"use client\"\r\n\r\nimport type React from \"react\"\r\nimport { Card, CardContent } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Copy, ExternalLink, Check } from \"lucide-react\"\r\nimport { useState } from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface RecurringOrder {\r\n  id: string\r\n  inputMint: string\r\n  outputMint: string\r\n  status: string\r\n  createdAt: string\r\n  updatedAt: string\r\n  [key: string]: any\r\n}\r\n\r\nfunction shortAddress(addr: string) {\r\n  return addr ? addr.slice(0, 4) + \"...\" + addr.slice(-4) : \"-\"\r\n}\r\n\r\nexport interface RecurringOrderCardProps {\r\n  order: any\r\n  className?: string\r\n  style?: React.CSSProperties\r\n}\r\n\r\nexport function RecurringOrderCard({ order, className, style }: RecurringOrderCardProps) {\r\n  const [copied, setCopied] = useState(false)\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(order.id)\r\n    setCopied(true)\r\n    setTimeout(() => setCopied(false), 1200)\r\n  }\r\n\r\n  const getStatusVariant = (status: string) => {\r\n    switch (status.toLowerCase()) {\r\n      case \"active\":\r\n      case \"completed\":\r\n        return \"default\"\r\n      case \"cancelled\":\r\n      case \"expired\":\r\n      case \"failed\":\r\n        return \"destructive\"\r\n      case \"pending\":\r\n      case \"processing\":\r\n        return \"secondary\"\r\n      default:\r\n        return \"outline\"\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      className={cn(\r\n        \"min-w-[420px] w-full max-w-md rounded-2xl border shadow-lg transition-shadow hover:shadow-xl\",\r\n        className,\r\n      )}\r\n      style={style}\r\n    >\r\n      <CardContent className=\"p-8 space-y-5\">\r\n        {/* Order ID */}\r\n        <div className=\"flex items-center justify-between gap-3\">\r\n          <span className=\"text-sm font-medium text-muted-foreground min-w-[80px]\">Order ID</span>\r\n          <div className=\"flex items-center gap-2\">\r\n            <code className=\"relative rounded bg-muted px-3 py-1.5 font-mono text-sm\">{shortAddress(order.id)}</code>\r\n            <Button\r\n              size=\"icon\"\r\n              variant=\"ghost\"\r\n              onClick={handleCopy}\r\n              className={cn(\r\n                \"h-8 w-8 hover:bg-muted flex-shrink-0 transition-colors\",\r\n                copied && \"text-green-600 hover:text-green-700 dark:text-green-400 dark:hover:text-green-300\",\r\n              )}\r\n              title={copied ? \"Copied!\" : \"Copy Order ID\"}\r\n            >\r\n              {copied ? <Check className=\"h-4 w-4\" /> : <Copy className=\"h-4 w-4\" />}\r\n            </Button>\r\n            <Button\r\n              size=\"icon\"\r\n              variant=\"ghost\"\r\n              asChild\r\n              className=\"h-8 w-8 hover:bg-muted flex-shrink-0\"\r\n              title=\"View on Solscan\"\r\n            >\r\n              <a href={`https://solscan.io/account/${order.id}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <ExternalLink className=\"h-4 w-4\" />\r\n              </a>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* From */}\r\n        <div className=\"flex items-center justify-between gap-3\">\r\n          <span className=\"text-sm font-medium text-muted-foreground min-w-[80px]\">From</span>\r\n          <code className=\"relative rounded bg-muted px-3 py-1.5 font-mono text-sm\">\r\n            {shortAddress(order.inputMint)}\r\n          </code>\r\n        </div>\r\n\r\n        {/* To */}\r\n        <div className=\"flex items-center justify-between gap-3\">\r\n          <span className=\"text-sm font-medium text-muted-foreground min-w-[80px]\">To</span>\r\n          <code className=\"relative rounded bg-muted px-3 py-1.5 font-mono text-sm\">\r\n            {shortAddress(order.outputMint)}\r\n          </code>\r\n        </div>\r\n\r\n        {/* Status */}\r\n        <div className=\"flex items-center justify-between gap-3\">\r\n          <span className=\"text-sm font-medium text-muted-foreground min-w-[80px]\">Status</span>\r\n          <Badge variant={getStatusVariant(order.status)} className=\"font-medium uppercase tracking-wide px-3 py-1\">\r\n            {order.status}\r\n          </Badge>\r\n        </div>\r\n\r\n        {/* Created */}\r\n        <div className=\"flex items-center justify-between gap-3\">\r\n          <span className=\"text-sm font-medium text-muted-foreground min-w-[80px]\">Created</span>\r\n          <time className=\"text-sm text-muted-foreground font-mono\">\r\n            {order.createdAt ? new Date(order.createdAt).toLocaleString() : \"-\"}\r\n          </time>\r\n        </div>\r\n\r\n        {/* Updated (if different from created) */}\r\n        {order.updatedAt && order.updatedAt !== order.createdAt && (\r\n          <div className=\"flex items-center justify-between gap-3\">\r\n            <span className=\"text-sm font-medium text-muted-foreground min-w-[80px]\">Updated</span>\r\n            <time className=\"text-sm text-muted-foreground font-mono\">\r\n              {new Date(order.updatedAt).toLocaleString()}\r\n            </time>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default RecurringOrderCard\r\n",
      "type": "registry:component",
      "target": "components/ui/murphy/Jupiter-Recurring/RecurringOrderCard.tsx"
    }
  ]
}