{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "RecurringOrderCard",
  "type": "registry:block",
  "author": "Murphy",
  "description": "Murphy component to display a single Jupiter Recurring DCA Order on Solana mainnet",
  "dependencies": [
    "@solana/web3.js",
    "@solana/wallet-adapter-react",
    "sonner"
  ],
  "files": [
    {
      "path": "components/ui/murphy/Jupiter-Recurring/RecurringOrderCard.tsx",
      "content": "\"use client\"\n\nimport type React from \"react\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Copy, ExternalLink, Check } from \"lucide-react\"\nimport { useState } from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface RecurringOrder {\n  id: string\n  inputMint: string\n  outputMint: string\n  status: string\n  createdAt: string\n  updatedAt: string\n  [key: string]: any\n}\n\nfunction shortAddress(addr: string) {\n  return addr ? addr.slice(0, 4) + \"...\" + addr.slice(-4) : \"-\"\n}\n\nexport interface RecurringOrderCardProps {\n  order: any\n  className?: string\n  style?: React.CSSProperties\n}\n\nexport function RecurringOrderCard({ order, className, style }: RecurringOrderCardProps) {\n  const [copied, setCopied] = useState(false)\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(order.id)\n    setCopied(true)\n    setTimeout(() => setCopied(false), 1200)\n  }\n\n  const getStatusVariant = (status: string) => {\n    switch (status.toLowerCase()) {\n      case \"active\":\n      case \"completed\":\n        return \"default\"\n      case \"cancelled\":\n      case \"expired\":\n      case \"failed\":\n        return \"destructive\"\n      case \"pending\":\n      case \"processing\":\n        return \"secondary\"\n      default:\n        return \"outline\"\n    }\n  }\n\n  return (\n    <Card\n      className={cn(\n        \"min-w-[420px] w-full max-w-md rounded-2xl border shadow-lg transition-shadow hover:shadow-xl\",\n        className,\n      )}\n      style={style}\n    >\n      <CardContent className=\"p-8 space-y-5\">\n        {/* Order ID */}\n        <div className=\"flex items-center justify-between gap-3\">\n          <span className=\"text-sm font-medium text-muted-foreground min-w-[80px]\">Order ID</span>\n          <div className=\"flex items-center gap-2\">\n            <code className=\"relative rounded bg-muted px-3 py-1.5 font-mono text-sm\">{shortAddress(order.id)}</code>\n            <Button\n              size=\"icon\"\n              variant=\"ghost\"\n              onClick={handleCopy}\n              className={cn(\n                \"h-8 w-8 hover:bg-muted flex-shrink-0 transition-colors\",\n                copied && \"text-green-600 hover:text-green-700 dark:text-green-400 dark:hover:text-green-300\",\n              )}\n              title={copied ? \"Copied!\" : \"Copy Order ID\"}\n            >\n              {copied ? <Check className=\"h-4 w-4\" /> : <Copy className=\"h-4 w-4\" />}\n            </Button>\n            <Button\n              size=\"icon\"\n              variant=\"ghost\"\n              asChild\n              className=\"h-8 w-8 hover:bg-muted flex-shrink-0\"\n              title=\"View on Solscan\"\n            >\n              <a href={`https://solscan.io/account/${order.id}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                <ExternalLink className=\"h-4 w-4\" />\n              </a>\n            </Button>\n          </div>\n        </div>\n\n        {/* From */}\n        <div className=\"flex items-center justify-between gap-3\">\n          <span className=\"text-sm font-medium text-muted-foreground min-w-[80px]\">From</span>\n          <code className=\"relative rounded bg-muted px-3 py-1.5 font-mono text-sm\">\n            {shortAddress(order.inputMint)}\n          </code>\n        </div>\n\n        {/* To */}\n        <div className=\"flex items-center justify-between gap-3\">\n          <span className=\"text-sm font-medium text-muted-foreground min-w-[80px]\">To</span>\n          <code className=\"relative rounded bg-muted px-3 py-1.5 font-mono text-sm\">\n            {shortAddress(order.outputMint)}\n          </code>\n        </div>\n\n        {/* Status */}\n        <div className=\"flex items-center justify-between gap-3\">\n          <span className=\"text-sm font-medium text-muted-foreground min-w-[80px]\">Status</span>\n          <Badge variant={getStatusVariant(order.status)} className=\"font-medium uppercase tracking-wide px-3 py-1\">\n            {order.status}\n          </Badge>\n        </div>\n\n        {/* Created */}\n        <div className=\"flex items-center justify-between gap-3\">\n          <span className=\"text-sm font-medium text-muted-foreground min-w-[80px]\">Created</span>\n          <time className=\"text-sm text-muted-foreground font-mono\">\n            {order.createdAt ? new Date(order.createdAt).toLocaleString() : \"-\"}\n          </time>\n        </div>\n\n        {/* Updated (if different from created) */}\n        {order.updatedAt && order.updatedAt !== order.createdAt && (\n          <div className=\"flex items-center justify-between gap-3\">\n            <span className=\"text-sm font-medium text-muted-foreground min-w-[80px]\">Updated</span>\n            <time className=\"text-sm text-muted-foreground font-mono\">\n              {new Date(order.updatedAt).toLocaleString()}\n            </time>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default RecurringOrderCard\n",
      "type": "registry:component",
      "target": "components/ui/murphy/Jupiter-Recurring/RecurringOrderCard.tsx"
    }
  ]
}