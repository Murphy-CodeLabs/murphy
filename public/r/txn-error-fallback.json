{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "txn-error-fallback",
  "type": "registry:block",
  "title": "Fallback UI for failed transactions with retry and log support.",
  "dependencies": [],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "components/ui/murphy/Txn-Feedback/txn-error-fallback.tsx",
      "content": "\"use client\"\r\n\r\nimport { AlertTriangle, RefreshCw, Copy, ExternalLink } from \"lucide-react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { useState } from \"react\"\r\n\r\ninterface TxnErrorFallbackProps {\r\n  error: string\r\n  signature?: string\r\n  onRetry?: () => void\r\n  onClose?: () => void\r\n  showLogs?: boolean\r\n  logs?: string[]\r\n}\r\n\r\nexport function TxnErrorFallback({\r\n  error,\r\n  signature,\r\n  onRetry,\r\n  onClose,\r\n  showLogs = false,\r\n  logs = [],\r\n}: TxnErrorFallbackProps) {\r\n  const [copied, setCopied] = useState(false)\r\n\r\n  const copyError = async () => {\r\n    await navigator.clipboard.writeText(error)\r\n    setCopied(true)\r\n    setTimeout(() => setCopied(false), 2000)\r\n  }\r\n\r\n  return (\r\n    <Card className=\"w-full max-w-md mx-auto\">\r\n      <CardHeader className=\"text-center\">\r\n        <div className=\"mx-auto w-12 h-12 bg-red-100 rounded-full flex items-center justify-center mb-4\">\r\n          <AlertTriangle className=\"w-6 h-6 text-red-600\" />\r\n        </div>\r\n        <CardTitle className=\"text-red-900\">Transaction Failed</CardTitle>\r\n        <CardDescription>Your transaction could not be completed</CardDescription>\r\n      </CardHeader>\r\n\r\n      <CardContent className=\"space-y-4\">\r\n        <div className=\"p-3 bg-red-50 rounded-lg border border-red-200\">\r\n          <div className=\"flex items-start justify-between\">\r\n            <p className=\"text-sm text-red-800 flex-1 pr-2\">{error}</p>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"ghost\"\r\n              onClick={copyError}\r\n              className=\"h-6 w-6 p-0 text-red-600 hover:text-red-800\"\r\n            >\r\n              <Copy className=\"w-3 h-3\" />\r\n            </Button>\r\n          </div>\r\n          {copied && (\r\n            <Badge variant=\"secondary\" className=\"mt-2 text-xs\">\r\n              Copied to clipboard\r\n            </Badge>\r\n          )}\r\n        </div>\r\n\r\n        {signature && (\r\n          <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n            <div>\r\n              <p className=\"text-xs text-gray-500\">Transaction Signature</p>\r\n              <p className=\"text-sm font-mono\">\r\n                {signature.slice(0, 8)}...{signature.slice(-8)}\r\n              </p>\r\n            </div>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"outline\"\r\n              onClick={() => window.open(`https://explorer.solana.com/tx/${signature}`, \"_blank\")}\r\n            >\r\n              <ExternalLink className=\"w-4 h-4\" />\r\n            </Button>\r\n          </div>\r\n        )}\r\n\r\n        {showLogs && logs.length > 0 && (\r\n          <details className=\"group\">\r\n            <summary className=\"cursor-pointer text-sm font-medium text-gray-700 hover:text-gray-900\">\r\n              View Transaction Logs\r\n            </summary>\r\n            <div className=\"mt-2 p-3 bg-gray-50 rounded-lg max-h-32 overflow-y-auto\">\r\n              {logs.map((log, index) => (\r\n                <p key={index} className=\"text-xs font-mono text-gray-600 mb-1\">\r\n                  {log}\r\n                </p>\r\n              ))}\r\n            </div>\r\n          </details>\r\n        )}\r\n      </CardContent>\r\n\r\n      <CardFooter className=\"flex space-x-2\">\r\n        {onRetry && (\r\n          <Button onClick={onRetry} className=\"flex-1\">\r\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n            Try Again\r\n          </Button>\r\n        )}\r\n        <Button variant=\"outline\" onClick={onClose} className=\"flex-1 bg-transparent\">\r\n          Close\r\n        </Button>\r\n      </CardFooter>\r\n    </Card>\r\n  )\r\n}\r\n",
      "type": "registry:file",
      "target": "components/ui/murphy/Txn-Feedback/txn-error-fallback.tsx"
    }
  ]
}